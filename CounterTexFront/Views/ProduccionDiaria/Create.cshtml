@model CounterTexFront.Models.ProduccionDiariaViewModel

@{
    ViewBag.Title = "Nueva Producción Diaria";
    Layout = ViewBag.Layout;
}
<h2>@ViewBag.Title</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        @ViewBag.Error
    </div>
}

@using (Html.BeginForm("Create", "ProduccionDiaria", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.Fecha, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UsuarioId, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.UsuarioId, new SelectList(Model.UsuariosDisponibles, "Id", "Nombre"), "-- Selecciona un usuario --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UsuarioId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PrendaId, "Prenda", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.PrendaId, new SelectList(Model.PrendasDisponibles, "Id", "Nombre"), "-- Selecciona una prenda --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PrendaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <h4>Detalles de Producción</h4>

    <div id="detallesContainer">
        @if (Model.ProduccionDetalles != null && Model.ProduccionDetalles.Any())
        {
            for (int i = 0; i < Model.ProduccionDetalles.Count; i++)
            {
                @Html.Partial("_ProduccionDetallePartial", Model.ProduccionDetalles[i], new ViewDataDictionary { { "index", i }, { "operaciones", Model.OperacionesDisponibles } })
            }
        }
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-4">
            <button type="button" class="btn btn-info" id="btnAgregarDetalle">Agregar Detalle</button>
        </div>
    </div>

    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-4">
            <input type="submit" value="Guardar Producción" class="btn btn-success" />
            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        let index = @Model.ProduccionDetalles?.Count ?? 0;

$("#btnAgregarDetalle").click(function () {
    $.get("@Url.Action("GetProduccionDetallePartial", "ProduccionDiaria")", { index: index }, function (html) {
        $("#detallesContainer").append(html);
        index++;
    });
});

$(document).on("click", ".remove-detalle", function () {
    $(this).closest(".form-group").remove();
});

</script>
}
@model CounterTexFront.Models.ProduccionDiariaViewModel

@{
    ViewBag.Title = "Registrar Producción Diaria";
    Layout = "~/Views/Shared/_LayoutEmpleado.cshtml";
}

@section Styles {
    <style>
        body {
            color: white;
            background-color: transparent;
        }

        .form-section {
            background-color: #2c2c2c;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        }

        h2, h4, label {
            color: white;
        }

        .detalle-item {
            background-color: #2d2d2d;
            border: 1px solid #555;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            color: white;
        }


        .dropdown-records {
            background-color: #1c1c1c;
            padding: 20px;
            border-radius: 10px;
            color: #ddd;
            border: 1px solid #444;
        }

        .record-item {
            border-bottom: 1px dashed #666;
            padding: 5px 0;
            font-size: 14px;
        }

        .btn-toggle-records {
            margin-top: 30px;
        }

        .accordion-button {
            background-color: #343a40;
            color: white;
        }
    </style>
}

<div class="container mt-4">
    <div class="form-section mb-5">
       

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @{
            var usuario = Session["Usuario"] as CounterTexFront.Models.LoginResponse;
            var usuariosFiltrados = Model.Usuarios.Where(u => u.Value == usuario?.Id.ToString()).ToList();
        }


        @using (Html.BeginForm("Index", "ProduccionDiaria", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(m => m.Fecha)
                @Html.TextBoxFor(m => m.Fecha, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UsuarioId)
                @Html.DropDownListFor(m => m.UsuarioId, usuariosFiltrados, "-- Seleccione Usuario --", new { @class = "form-control", required = "required", id = "usuarioDropdown" })

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PrendaId)
                @Html.DropDownListFor(m => m.PrendaId, Model.Prendas, "-- Seleccione Prenda --", new { @class = "form-control", required = "required" })
            </div>

            <h4 class="mt-4 text-light">Detalles de Producción</h4>

            <div id="detalles">
                @for (int i = 0; i < Model.ProduccionDetalles.Count; i++)
                {
                    <div class="detalle-item">
                        @Html.HiddenFor(m => m.ProduccionDetalles[i].Id)

                        <div class="form-group">
                            @Html.LabelFor(m => m.ProduccionDetalles[i].Cantidad)
                            @Html.TextBoxFor(m => m.ProduccionDetalles[i].Cantidad, new { @class = "form-control", type = "number", min = 0, required = "required" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ProduccionDetalles[i].OperacionId)
                            @Html.DropDownListFor(m => m.ProduccionDetalles[i].OperacionId, Model.Operaciones, "-- Seleccione Operación --", new { @class = "form-control", required = "required" })
                        </div>
                    </div>
                }
            </div>

            <!-- CAMPO DE TOTAL VALOR (solo lectura) -->
            <div class="form-group mt-4">
                @Html.LabelFor(m => m.TotalValor)
                @Html.TextBoxFor(m => m.TotalValor, new
                {
                    @class = "form-control font-weight-bold",
                    @readonly = "readonly",
                    style = "background-color: #e0e0e0; color: black;"
                })
            </div>

            <div class="text-center mt-4">
                <input type="submit" value="Guardar Producción Diaria" class="btn btn-success btn-lg px-4" />
            </div>
        }
    </div>

    <div class="accordion" id="accordionRegistros">
        <div class="card bg-dark text-white">
            <div class="card-header" id="headingOne">
                <h2 class="mb-0">
                    <button class="btn btn-info btn-block text-left" type="button" data-toggle="collapse" data-target="#collapseRegistros" aria-expanded="true" aria-controls="collapseRegistros">
                        Mostrar Registros Anteriores del Usuario
                    </button>
                </h2>
            </div>

            <div id="collapseRegistros" class="collapse" aria-labelledby="headingOne" data-parent="#accordionRegistros">
                <div class="card-body">
                    <div class="dropdown-records" id="registrosPrevios" style="display:none;">
                        <strong class="text-secondary">📋 Registros anteriores del usuario:</strong>
                        <div id="lista-registros"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("usuarioDropdown").addEventListener("change", function () {
            const usuarioId = this.value;
            const registrosDiv = document.getElementById("registrosPrevios");
            const listaDiv = document.getElementById("lista-registros");

            if (!usuarioId || usuarioId === "0") {
                registrosDiv.style.display = "none";
                listaDiv.innerHTML = "";
                return;
            }

            fetch(`/ProduccionDiaria/ObtenerRegistrosPorUsuario?usuarioId=${usuarioId}`)
                .then(response => response.json())
                .then(data => {
                    registrosDiv.style.display = "block";
                    listaDiv.innerHTML = "";

                    if (data && data.length > 0) {
                        data.forEach(item => {
                            const record = document.createElement("div");
                            record.className = "record-item";
                            record.innerHTML = `
                                    <strong>Fecha:</strong> ${item.Fecha} |
                                    <strong>Prenda:</strong> ${item.PrendaNombre} |
                                    <strong>Cant:</strong> ${item.TotalCantidad}
                                    <strong>Total:</strong> $${item.TotalValor.toFixed(2)}
                                    ${item.Id ? `| <a class="btn btn-sm btn-outline-light ml-2" href="/ProduccionDiaria/Editar/${item.Id}">Editar</a>` : ""}
                                `;
                            listaDiv.appendChild(record);
                        });
                    } else {
                        listaDiv.innerHTML = "<em>No hay registros anteriores para este usuario.</em>";
                    }
                })
                .catch(error => {
                    registrosDiv.style.display = "block";
                    listaDiv.innerHTML = "<em>Error al cargar registros.</em>";
                    console.error("Error al obtener registros:", error);
                });
        });
    </script>
}

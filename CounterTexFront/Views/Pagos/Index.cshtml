@model List<CounterTexFront.Models.PagoViewModel>
@{
    ViewBag.Title = "Pagos quincenales";
    Layout = ViewBag.Layout;
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success shadow rounded mt-2">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger shadow rounded mt-2">
        <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
    </div>
}

<div class="container mt-4 text-light">
    <h2 class="mb-4"><i class="fas fa-file-invoice"></i> Generar Nómina Quincenal</h2>

    <p class="text-light">
        Selecciona un rango de fechas para calcular los pagos de todos los empleados según su producción registrada.
        Una vez generada la nómina, los pagos aparecerán listados abajo.
    </p>

    <form method="post" action="@Url.Action("Generar", "Pagos")" id="formNomina" class="row g-3 mb-5 bg-dark text-light p-4 rounded shadow-sm border border-secondary">
        <div class="col-md-4">
            <label for="fechaInicio" class="form-label"><i class="far fa-calendar-alt"></i> Fecha Inicio</label>
            <input type="date" class="form-control bg-secondary text-light border-0" name="fechaInicio" required />
        </div>
        <div class="col-md-4">
            <label for="fechaFin" class="form-label"><i class="far fa-calendar-check"></i> Fecha Fin</label>
            <input type="date" class="form-control bg-secondary text-light border-0" name="fechaFin" required />
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <button type="submit" class="btn btn-success w-100 shadow">
                <i class="fas fa-cogs"></i> Generar Nómina
            </button>
        </div>
    </form>

    @if (Model != null && Model.Any())
    {
        <h3 class="mb-3"><i class="fas fa-money-check-alt"></i> Pagos Generados</h3>

        <table class="table table-dark table-striped table-hover table-bordered shadow-sm">
            <thead class="table-secondary text-dark">
                <tr>
                    <th><i class="fas fa-user"></i> Empleado</th>
                    <th><i class="fas fa-calendar-day"></i> Periodo</th>
                    <th><i class="fas fa-dollar-sign"></i> Total Pagado</th>
                    <th><i class="fas fa-clock"></i> Fecha de Pago</th>
                    <th><i class="fas fa-comment-dots"></i> Observaciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pago in Model)
                {
                    <tr>
                        <td>@(pago.Usuario != null ? pago.Usuario.Nombre : "⚠️ Usuario no disponible")</td>
                        <td>@pago.FechaInicio.ToShortDateString() - @pago.FechaFin.ToShortDateString()</td>
                        <td>@pago.TotalPagado.ToString("C", new System.Globalization.CultureInfo("es-CO"))</td>
                        <td>@pago.FechaPago.ToShortDateString()</td>
                        <td>@(!string.IsNullOrWhiteSpace(pago.Observaciones) ? pago.Observaciones : "Sin observación")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info text-dark shadow-sm">
            <i class="fas fa-info-circle"></i> Aún no se han generado pagos para mostrar. Por favor selecciona un rango de fechas y presiona <strong>Generar Nómina</strong>.
        </div>
    }
</div>

@section Scripts {
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("formNomina");
        const fechaInicio = form.querySelector("input[name='fechaInicio']");
        const fechaFin = form.querySelector("input[name='fechaFin']");

        form.addEventListener("submit", function (e) {
            const inicio = new Date(fechaInicio.value);
            const fin = new Date(fechaFin.value);

            const dias = Math.floor((fin - inicio) / (1000 * 60 * 60 * 24));

            if (isNaN(dias)) {
                alert("⚠️ Por favor selecciona ambas fechas.");
                e.preventDefault();
                return;
            }

            if (dias !== 14) {
                alert("⚠️ El rango debe ser exactamente de 15 días (diferencia de 14 días entre fechas).");
                e.preventDefault();
            }
        });
    });
    </script>
}

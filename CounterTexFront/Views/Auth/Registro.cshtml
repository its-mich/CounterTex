@using System.Web.Optimization
@{
    Layout = null;
}
@model CounterTexFront.Models.RegistroViewModel

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CounterTex - Registro</title>

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
            background: url('/images/fondo3.jpg') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        .register-card {
            background: rgba(15, 23, 42, 0.9); /* fondo semi-transparente */
            border: 1px solid rgba(160, 204, 242, 0.3);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 40px;
            max-width: 600px;
            width: 100%;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            color: #F2F2F2;
            transition: transform 0.3s ease-in-out;
        }

            .register-card:hover {
                box-shadow: 0 0 25px 6px rgba(0, 123, 255, 0.4);
                transform: scale(1.02);
            }

        .logo {
            width: 100px;
            margin-bottom: 20px;
        }

        h3 {
            font-weight: 700;
            color: #F2F2F2;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

            .form-group label {
                font-weight: bold;
                color: #A0CCF2;
                font-size: 14px;
            }

        .form-control {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid #A0CCF2;
            border-radius: 8px;
            padding: 8px 12px; /* Reducimos el padding vertical de 12px a 8px */
            color: #F2F2F2;
        }

            .form-control::placeholder {
                color: #A0CCF2;
            }

        .btn-primary {
            background-color: #A0CCF2;
            color: #404040;
            border: none;
            padding: 12px;
            font-size: 16px;
            border-radius: 8px;
            width: 100%;
            transition: background-color 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #6fb3e0;
            }

        .alert-custom {
            background-color: #334155;
            color: #ef4444;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .text-danger {
            color: #ef4444;
        }

        .register-link {
            color: #A0CCF2;
            font-size: 14px;
            text-decoration: none;
        }

            .register-link:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <div class="register-card">
        <img src="~/images/logoredondo.png" alt="Logo" class="logo" />
        <h3>Registro de Nuevo Usuario</h3>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""] != null)
        {
            foreach (var error in ViewData.ModelState[""].Errors)
            {
                <div class="alert-custom">
                    <strong>Error:</strong><br />
                    @error.ErrorMessage
                </div>
            }
        }

        @using (Html.BeginForm("Registro", "Auth", FormMethod.Post, new { id = "registerForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Nombres)
                    @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control", @placeholder = "Nombre", required = "required" })
                    @Html.ValidationMessageFor(m => m.Nombres, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Apellidos)
                    @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control", @placeholder = "Apellido", required = "required" })
                    @Html.ValidationMessageFor(m => m.Apellidos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Documento, "Número de Documento")
                @Html.TextBoxFor(m => m.Documento, new { @class = "form-control", @placeholder = "Número de Documento", required = "required" })
                @Html.ValidationMessageFor(m => m.Documento, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Correo)
                @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", @type = "email", @placeholder = "correo@ejemplo.com", required = "required" })
                @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Contraseña)
                @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", @placeholder = "Contraseña", required = "required" })
                @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmarContraseña, "Confirmar Contraseña")
                @Html.PasswordFor(m => m.ConfirmarContraseña, new { @class = "form-control", @placeholder = "Confirmar Contraseña", required = "required" })
                @Html.ValidationMessageFor(m => m.ConfirmarContraseña, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Rol, "Tipo de Usuario")
                @Html.DropDownListFor(m => m.Rol,
                    new SelectList(new[]
                    {
                        new { Value = "", Text = "Seleccione un rol" }, // Opción vacía como placeholder
                        new { Value = "Administrador", Text = "Administrador" },
                        new { Value = "Empleado", Text = "Empleado" },
                        new { Value = "Proveedor", Text = "Proveedor" }
                    }, "Value", "Text"),
                    new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.Rol, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary">Registrarse</button>
            <p class="mt-3">¿Ya tienes una cuenta? <a href="@Url.Action("Login", "Auth")" class="register-link">Iniciar Sesión</a></p>
        }
    </div>
</body>
</html>
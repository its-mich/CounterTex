@{
    Layout = null;
}
@using System.Web;
@model CounterTexFront.Models.LoginViewModel

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CounterTex - Inicia sesión</title>

    <!-- Bootstrap -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Roboto Font -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

<style>

        body {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
            color: #F2F2F2;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            overflow: hidden;
        }

        .background-container {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 100vw;
            z-index: -1;
            overflow: hidden;
        }

        .background-container .bg {
            position: absolute;
            height: 100%;
            width: 100%;
            background-size: cover;
            background-position: center;
            opacity: 0;
            animation: fadeImages 24s infinite;
        }

        .background-container .bg1 {
            background-image: url('../../images/fondo.jpg');
            animation-delay: 0s;
        }

        .background-container .bg2 {
            background-image: url('../../images/fondo-login.jpg');
            animation-delay: 8s;
        }

        .background-container .bg3 {
            background-image: url('../../images/fondo3.jpg');
            animation-delay: 16s;
        }

        @@keyframes fadeImages {
            0% { opacity: 0; }
            10% { opacity: 1; }
            30% { opacity: 1; }
            40% { opacity: 0; }
            100% { opacity: 0; }
        }

        .login-card {
            background: rgba(15, 23, 42, 0.7); /* fondo semi-transparente */
            border: 1px solid rgba(160, 204, 242, 0.3);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 40px;
            max-width: 400px;
            width: 100%;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            color: #F2F2F2;
            transition: transform 0.3s ease-in-out;
        }

            .login-card:hover {
                box-shadow: 0 0 25px 6px rgba(0, 123, 255, 0.4);
                transform: scale(1.02);
            }

        .logo {
            width: 100px;
            margin-bottom: 20px;
        }

        h3 {
            font-weight: 700;
            color: #F2F2F2;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

            .form-group label {
                font-weight: bold;
                color: var(--text-color);
                font-size: 14px;
            }

        .form-control {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid #A0CCF2;
            border-radius: 8px;
            padding: 12px;
            color: #F2F2F2;
        }

            .form-control::placeholder {
                color: #A0CCF2;
            }

        .btn-primary {
            background-color: #A0CCF2;
            color: #404040;
            border: none;
            padding: 12px;
            font-size: 16px;
            border-radius: 8px;
            width: 100%;
            transition: background-color 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #6fb3e0;
            }

        .alert-custom {
            background-color: #334155;
            color: #ef4444;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .text-danger {
            color: #ef4444;
        }

        .custom-alert {
            background-color: #fdecea;
            color: #a94442;
            border: 1px solid #dc3545;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .register-link, .forgot-password {
            color: #A0CCF2;
            font-size: 14px;
            text-decoration: none;
        }

            .register-link:hover, .forgot-password:hover {
                text-decoration: underline;
            }

        /* Estilos para alinear el reCAPTCHA */
        .g-recaptcha {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            transform: scale(1.04); /* Aumenta la escala en un 5% - puedes ajustar este valor */
            transform-origin: center center; /* Asegura que la escala se aplique desde el centro */
        }
</style>


</head>
<body>
    <!-- Fondo animado -->
    <div class="background-container">
        <div class="bg bg1"></div>
        <div class="bg bg2"></div>
        <div class="bg bg3"></div>
    </div>

    <div class="container d-flex align-items-center justify-content-center" style="min-height: 100vh;">
        <div class="login-card">
            <a href="@Url.Action("Welcome", "Home")">
                <img src="~/images/logoredondo.png" alt="Logo" class="logo" />
            </a>
            <h3>Iniciar sesión en CounterTex</h3>

            @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""] != null)
            {
                foreach (var error in ViewData.ModelState[""].Errors)
                {
                    <div class="custom-alert">
                        <strong>Error:</strong><br />
                        @error.ErrorMessage
                    </div>
                }
            }

            @using (Html.BeginForm("Login", "Auth", FormMethod.Post, new { id = "loginForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Correo electrónico", required = "required" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Contraseña", required = "required" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="g-recaptcha" data-sitekey="6LeXMz0rAAAAAJEgtLdndZVKu7rEzuDvQs7OHXIE"></div>
                </div>

                <button type="submit" class="btn btn-primary">Iniciar Sesión</button>

                <p class="mt-3">¿No tienes una cuenta? <a href="@Url.Action("Registro", "Auth")" class="register-link">Regístrate</a></p>
                <p><a href="@Url.Action("Recuperar", "Auth")" class="forgot-password">¿Olvidaste tu contraseña?</a></p>
            }
        </div>

        @if (!string.IsNullOrEmpty(Convert.ToString(TempData["MensajeRegistro"])))
        {
            var mensaje = HttpUtility.JavaScriptStringEncode(TempData["MensajeRegistro"].ToString());
            <script type="text/javascript">
        window.onload = function () {
            alert("@Html.Raw(mensaje)");
        };
            </script>
        }
</body>
</html>

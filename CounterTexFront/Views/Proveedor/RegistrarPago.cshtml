@model CounterTexFront.Models.PagoProveedorViewModel

@{
    ViewBag.Title = "Registrar Pago";
    Layout = ViewBag.Layout;
}

<div class="container mt-5 text-light">
    <h2 class="mb-4"><i class="fas fa-file-invoice-dollar"></i> Registrar Pago de Entregas</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    @using (Html.BeginForm("RegistrarPago", "Proveedor", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

        <div class="mb-3">
            @Html.LabelFor(m => m.PrendaId, "Tipo de Prenda", new { @class = "form-label" })
            @Html.DropDownListFor(m => m.PrendaId, Model.PrendasDisponibles, "-- Seleccione una prenda --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PrendaId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.CantidadPrendas, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.CantidadPrendas, new { @class = "form-control", type = "number", min = "1", id = "CantidadPrendas" })
            @Html.ValidationMessageFor(m => m.CantidadPrendas, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.PrecioUnitario, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.PrecioUnitario, new { @class = "form-control", type = "number", step = "0.01", min = "0.01", id = "PrecioUnitario" })
            @Html.ValidationMessageFor(m => m.PrecioUnitario, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <label class="form-label">Total a Pagar (COP)</label>
            <input type="text" id="TotalCalculado" class="form-control" readonly />
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Observaciones, new { @class = "form-label" })
            @Html.TextAreaFor(m => m.Observaciones, new { @class = "form-control", rows = "3" })
        </div>

        <button type="submit" class="btn btn-success">
            <i class="fas fa-paper-plane"></i> Enviar Pago
        </button>
    }
</div>

@section Scripts {
    <script>
        function actualizarTotal() {
            const cantidad = parseFloat(document.getElementById("CantidadPrendas").value) || 0;
            const precio = parseFloat(document.getElementById("PrecioUnitario").value) || 0;
            const total = cantidad * precio;
            const formatter = new Intl.NumberFormat('es-CO', {
                style: 'currency',
                currency: 'COP'
            });
            document.getElementById("TotalCalculado").value = formatter.format(total);
        }

        document.getElementById("CantidadPrendas").addEventListener("input", actualizarTotal);
        document.getElementById("PrecioUnitario").addEventListener("input", actualizarTotal);
        window.onload = actualizarTotal;
    </script>
}
